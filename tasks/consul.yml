---
- name: Prepare consul persistent storage
  when: inventory_hostname in groups['consul_cluster']
  file: name=/docker/consul/data
    owner=root group=docker
    state=directory
    mode=2770

- name: Get the address of docker0
  shell: ip addr show docker0 | grep -Po 'inet \K[\d.]+'
  register: docker0_ip

- name: Copy the getip script
  copy: src=files/get_ip.sh dest=/tmp/get_ip.sh mode=0755

- name: Get the host ip
  shell: /tmp/get_ip.sh $(hostname -f)
  register: host_ip

- name: Get the consul bootstrap IP
  shell: /tmp/get_ip.sh {{ consul_bootstrap_hostname }}
  register: bootstrap_ip

- name: Check if UI is required
  command: echo '-ui-dir'
  when: consul_ui == true
  register: ui_option

- name: Start the consul bootstrap node
  when:
    - inventory_hostname in groups['consul_cluster']
    - inventory_hostname == consul_bootstrap_hostname
  docker:
    name: consul_node
    image: progrium/consul
    state: reloaded
    restart_policy: always
    volumes:
      - /docker/consul/data:/data
    ports:
      - "{{host_ip.stdout}}:8300:8300"
      - "{{host_ip.stdout}}:8301:8301"
      - "{{host_ip.stdout}}:8301:8301/udp"
      - "{{host_ip.stdout}}:8302:8302"
      - "{{host_ip.stdout}}:8302:8302/udp"
      - "{{host_ip.stdout}}:8400:8400"
      - "{{host_ip.stdout}}:8500:8500"
      - "{{docker0_ip.stdout}}:53:53/udp"
    command: -server -advertise "{{ host_ip.stdout }}" -bootstrap-expect 3 "{{ ui_option }}"

- name: Start the consul node
  when:
    - inventory_hostname in groups['consul_cluster']
    - inventory_hostname != consul_bootstrap_hostname
  docker:
    name: consul_node
    image: progrium/consul
    state: reloaded
    restart_policy: always
    volumes:
      - /docker/consul/data:/data
    ports:
      - "{{host_ip.stdout}}:8300:8300"
      - "{{host_ip.stdout}}:8301:8301"
      - "{{host_ip.stdout}}:8301:8301/udp"
      - "{{host_ip.stdout}}:8302:8302"
      - "{{host_ip.stdout}}:8302:8302/udp"
      - "{{host_ip.stdout}}:8400:8400"
      - "{{host_ip.stdout}}:8500:8500"
      - "{{docker0_ip.stdout}}:53:53/udp"
    command: -server -advertise "{{ host_ip.stdout }}" -join "{{ bootstrap_ip.stdout }}" "{{ ui_option }}"
